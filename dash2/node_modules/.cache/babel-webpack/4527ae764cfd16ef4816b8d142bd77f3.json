{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Development/src/untitled folder/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl, FormGroup, Validators, VERSION } from '@angular/forms';\nimport { HttpResponse, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/core/services/storage/storage.service\";\nimport * as i3 from \"src/app/core/services/categories/categories.service\";\nimport * as i4 from \"src/app/core/services/Artist/artist.service\";\nimport * as i5 from \"src/app/core/services/products/products.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"src/app/core/services/toast/toasts.service\";\nexport class AddArtistComponent {\n  constructor(http, uploadService, categoriesService, artistService, productService, route, toastService) {\n    var _this = this;\n\n    this.http = http;\n    this.uploadService = uploadService;\n    this.categoriesService = categoriesService;\n    this.artistService = artistService;\n    this.productService = productService;\n    this.route = route;\n    this.toastService = toastService;\n    this.uploadSuccess = false;\n    this.addSuccess = false;\n    this.aristForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      country: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      gender: new FormControl('', Validators.required),\n      date: new FormControl('', Validators.required),\n      department: new FormControl('', Validators.required),\n      avatar: new FormControl('', Validators.required)\n    });\n    this.version = VERSION;\n    this.categeories = this.categoriesService.getcategoriess().subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (data) {\n        _this.categeories = yield data;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  get name() {\n    return this.aristForm.get('name');\n  }\n\n  get email() {\n    return this.aristForm.get('email');\n  }\n\n  get country() {\n    return this.aristForm.get('country');\n  }\n\n  get gender() {\n    return this.aristForm.get('gender');\n  }\n\n  get date() {\n    return this.aristForm.get('date');\n  }\n\n  get department() {\n    return this.aristForm.get('department');\n  }\n\n  addArtist() {\n    console.log(this.aristForm.value);\n    console.log(this.selectedFiles);\n    this.uploadService.upload('images/arists', this.selectedFiles[0].name, this.selectedFiles[0]).then(data => {\n      if (data && this.selectedFiles && this.uploadSuccess && this.aristForm.valid) {\n        this.artistService.addArtist({\n          name: this.name.value,\n          dateOfBirth: this.date.value,\n          country: this.country.value,\n          email: this.email.value,\n          gender: this.gender.value,\n          department: this.department.value,\n          avatar: data,\n          TimeStamp: {\n            createdAt: new Date().toDateString(),\n            updatedAt: new Date().toDateString(),\n            removedAt: null\n          }\n        }).then(() => {\n          this.addSuccess = true;\n          setTimeout(() => {\n            this.route.navigate(['/admin/artists']);\n          }, 1000);\n        });\n      }\n    });\n  }\n\n  upload(files) {\n    this.uploadAndProgress(files);\n    this.selectedFiles = files;\n  }\n\n  uploadAndProgress(files) {\n    var formData = new FormData();\n    Array.from(files).forEach(f => formData.append('file', f));\n    this.http.post('https://file.io', formData, {\n      reportProgress: true,\n      observe: 'events'\n    }).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        this.percentDone = Math.round(100 * event.loaded / event.total);\n        console.log(files);\n      } else if (event instanceof HttpResponse) {\n        this.uploadSuccess = true;\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  showSuccess() {\n    this.toastService.show('Add success wait..', {\n      classname: 'bg-success text-light',\n      delay: 1000\n    });\n  }\n\n}\n\nAddArtistComponent.ɵfac = function AddArtistComponent_Factory(t) {\n  return new (t || AddArtistComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.CategoriesService), i0.ɵɵdirectiveInject(i4.ArtistService), i0.ɵɵdirectiveInject(i5.ProductsService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i7.ToastsService));\n};\n\nAddArtistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddArtistComponent,\n  selectors: [[\"app-add-artist\"]],\n  decls: 2,\n  vars: 0,\n  template: function AddArtistComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"add-artist works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtYXJ0aXN0LmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["/home/dev/Development/src/untitled folder/dashboard/src/app/components/artists/add-artist/add-artist.component.ts"],"names":["FormControl","FormGroup","Validators","VERSION","HttpResponse","HttpEventType","i0","i1","i2","i3","i4","i5","i6","i7","AddArtistComponent","constructor","http","uploadService","categoriesService","artistService","productService","route","toastService","uploadSuccess","addSuccess","aristForm","name","required","minLength","email","country","gender","date","department","avatar","version","categeories","getcategoriess","subscribe","data","get","addArtist","console","log","value","selectedFiles","upload","then","valid","dateOfBirth","TimeStamp","createdAt","Date","toDateString","updatedAt","removedAt","setTimeout","navigate","files","uploadAndProgress","formData","FormData","Array","from","forEach","f","append","post","reportProgress","observe","event","type","UploadProgress","percentDone","Math","round","loaded","total","ngOnInit","showSuccess","show","classname","delay","ɵfac","AddArtistComponent_Factory","t","ɵɵdirectiveInject","HttpClient","StorageService","CategoriesService","ArtistService","ProductsService","Router","ToastsService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","template","AddArtistComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"mappings":"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","sourcesContent":["import { FormControl, FormGroup, Validators, VERSION } from '@angular/forms';\nimport { HttpResponse, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/core/services/storage/storage.service\";\nimport * as i3 from \"src/app/core/services/categories/categories.service\";\nimport * as i4 from \"src/app/core/services/Artist/artist.service\";\nimport * as i5 from \"src/app/core/services/products/products.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"src/app/core/services/toast/toasts.service\";\nexport class AddArtistComponent {\n    constructor(http, uploadService, categoriesService, artistService, productService, route, toastService) {\n        this.http = http;\n        this.uploadService = uploadService;\n        this.categoriesService = categoriesService;\n        this.artistService = artistService;\n        this.productService = productService;\n        this.route = route;\n        this.toastService = toastService;\n        this.uploadSuccess = false;\n        this.addSuccess = false;\n        this.aristForm = new FormGroup({\n            name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n            email: new FormControl('', [Validators.required, Validators.email]),\n            country: new FormControl('', [\n                Validators.required,\n                Validators.minLength(3),\n            ]),\n            gender: new FormControl('', Validators.required),\n            date: new FormControl('', Validators.required),\n            department: new FormControl('', Validators.required),\n            avatar: new FormControl('', Validators.required),\n        });\n        this.version = VERSION;\n        this.categeories = this.categoriesService\n            .getcategoriess()\n            .subscribe(async (data) => {\n            this.categeories = await data;\n        });\n    }\n    get name() {\n        return this.aristForm.get('name');\n    }\n    get email() {\n        return this.aristForm.get('email');\n    }\n    get country() {\n        return this.aristForm.get('country');\n    }\n    get gender() {\n        return this.aristForm.get('gender');\n    }\n    get date() {\n        return this.aristForm.get('date');\n    }\n    get department() {\n        return this.aristForm.get('department');\n    }\n    addArtist() {\n        console.log(this.aristForm.value);\n        console.log(this.selectedFiles);\n        this.uploadService\n            .upload('images/arists', this.selectedFiles[0].name, this.selectedFiles[0])\n            .then((data) => {\n            if (data &&\n                this.selectedFiles &&\n                this.uploadSuccess &&\n                this.aristForm.valid) {\n                this.artistService\n                    .addArtist({\n                    name: this.name.value,\n                    dateOfBirth: this.date.value,\n                    country: this.country.value,\n                    email: this.email.value,\n                    gender: this.gender.value,\n                    department: this.department.value,\n                    avatar: data,\n                    TimeStamp: {\n                        createdAt: new Date().toDateString(),\n                        updatedAt: new Date().toDateString(),\n                        removedAt: null,\n                    },\n                })\n                    .then(() => {\n                    this.addSuccess = true;\n                    setTimeout(() => {\n                        this.route.navigate(['/admin/artists']);\n                    }, 1000);\n                });\n            }\n        });\n    }\n    upload(files) {\n        this.uploadAndProgress(files);\n        this.selectedFiles = files;\n    }\n    uploadAndProgress(files) {\n        var formData = new FormData();\n        Array.from(files).forEach((f) => formData.append('file', f));\n        this.http\n            .post('https://file.io', formData, {\n            reportProgress: true,\n            observe: 'events',\n        })\n            .subscribe((event) => {\n            if (event.type === HttpEventType.UploadProgress) {\n                this.percentDone = Math.round((100 * event.loaded) / event.total);\n                console.log(files);\n            }\n            else if (event instanceof HttpResponse) {\n                this.uploadSuccess = true;\n            }\n        });\n    }\n    ngOnInit() { }\n    showSuccess() {\n        this.toastService.show('Add success wait..', {\n            classname: 'bg-success text-light',\n            delay: 1000,\n        });\n    }\n}\nAddArtistComponent.ɵfac = function AddArtistComponent_Factory(t) { return new (t || AddArtistComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.CategoriesService), i0.ɵɵdirectiveInject(i4.ArtistService), i0.ɵɵdirectiveInject(i5.ProductsService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i7.ToastsService)); };\nAddArtistComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddArtistComponent, selectors: [[\"app-add-artist\"]], decls: 2, vars: 0, template: function AddArtistComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"add-artist works!\");\n        i0.ɵɵelementEnd();\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtYXJ0aXN0LmNvbXBvbmVudC5jc3MifQ== */\"] });\n"]},"metadata":{},"sourceType":"module"}