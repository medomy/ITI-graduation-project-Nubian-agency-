{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Development/src/untitled folder/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { collection, collectionData } from '@angular/fire/firestore';\nimport { deleteDoc, doc, setDoc } from '@firebase/firestore';\nimport { docData } from 'rxfire/firestore';\nlet ArtistService = class ArtistService {\n  constructor(firestore) {\n    this.firestore = firestore;\n  } //getAll\n\n\n  getArtists() {\n    const dataCollection = collection(this.firestore, 'artist');\n    return collectionData(dataCollection);\n  } //get by id\n\n\n  getOneArtist(id) {\n    let oneArtist = doc(this.firestore, `artist`, id);\n    return docData(oneArtist);\n  } //add\n\n\n  addArtist(artist) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const newArtist = yield doc(collection(_this.firestore, 'artist'));\n      setDoc(newArtist, Object.assign(Object.assign({}, artist), {\n        id: newArtist.id\n      }));\n    })();\n  } //update\n\n\n  updateArtist(id, newProp) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield setDoc(doc(_this2.firestore, 'artist', id), newProp, {\n        merge: true\n      });\n    })();\n  } //remove\n\n\n  removeArtist(id) {\n    deleteDoc(doc(this.firestore, 'artist', id));\n  }\n\n};\nArtistService = __decorate([Injectable({\n  providedIn: 'root'\n})], ArtistService);\nexport { ArtistService };","map":{"version":3,"sources":["/home/dev/Development/src/untitled folder/dashboard/src/app/core/services/Artist/artist.service.ts"],"names":["__decorate","Injectable","collection","collectionData","deleteDoc","doc","setDoc","docData","ArtistService","constructor","firestore","getArtists","dataCollection","getOneArtist","id","oneArtist","addArtist","artist","newArtist","Object","assign","updateArtist","newProp","merge","removeArtist","providedIn"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA4C,yBAA5C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,QAAuC,qBAAvC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,IAAIC,aAAa,GAAG,MAAMA,aAAN,CAAoB;AACpCC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH,GAHmC,CAIpC;;;AACAC,EAAAA,UAAU,GAAG;AACT,UAAMC,cAAc,GAAGV,UAAU,CAAC,KAAKQ,SAAN,EAAiB,QAAjB,CAAjC;AACA,WAAOP,cAAc,CAACS,cAAD,CAArB;AACH,GARmC,CASpC;;;AACAC,EAAAA,YAAY,CAACC,EAAD,EAAK;AACb,QAAIC,SAAS,GAAGV,GAAG,CAAC,KAAKK,SAAN,EAAkB,QAAlB,EAA2BI,EAA3B,CAAnB;AACA,WAAOP,OAAO,CAACQ,SAAD,CAAd;AACH,GAbmC,CAcpC;;;AACMC,EAAAA,SAAS,CAACC,MAAD,EAAS;AAAA;;AAAA;AACpB,YAAMC,SAAS,SAASb,GAAG,CAACH,UAAU,CAAC,KAAI,CAACQ,SAAN,EAAiB,QAAjB,CAAX,CAA3B;AACAJ,MAAAA,MAAM,CAACY,SAAD,EAAYC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAAd,EAAyC;AAAEH,QAAAA,EAAE,EAAEI,SAAS,CAACJ;AAAhB,OAAzC,CAAZ,CAAN;AAFoB;AAGvB,GAlBmC,CAmBpC;;;AACMO,EAAAA,YAAY,CAACP,EAAD,EAAKQ,OAAL,EAAc;AAAA;;AAAA;AAC5B,YAAMhB,MAAM,CAACD,GAAG,CAAC,MAAI,CAACK,SAAN,EAAiB,QAAjB,EAA2BI,EAA3B,CAAJ,EAAoCQ,OAApC,EAA6C;AACrDC,QAAAA,KAAK,EAAE;AAD8C,OAA7C,CAAZ;AAD4B;AAI/B,GAxBmC,CAyBpC;;;AACAC,EAAAA,YAAY,CAACV,EAAD,EAAK;AACbV,IAAAA,SAAS,CAACC,GAAG,CAAC,KAAKK,SAAN,EAAiB,QAAjB,EAA2BI,EAA3B,CAAJ,CAAT;AACH;;AA5BmC,CAAxC;AA8BAN,aAAa,GAAGR,UAAU,CAAC,CACvBC,UAAU,CAAC;AACPwB,EAAAA,UAAU,EAAE;AADL,CAAD,CADa,CAAD,EAIvBjB,aAJuB,CAA1B;AAKA,SAASA,aAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { collection, collectionData, } from '@angular/fire/firestore';\nimport { deleteDoc, doc, setDoc } from '@firebase/firestore';\nimport { docData } from 'rxfire/firestore';\nlet ArtistService = class ArtistService {\n    constructor(firestore) {\n        this.firestore = firestore;\n    }\n    //getAll\n    getArtists() {\n        const dataCollection = collection(this.firestore, 'artist');\n        return collectionData(dataCollection);\n    }\n    //get by id\n    getOneArtist(id) {\n        let oneArtist = doc(this.firestore, `artist`, id);\n        return docData(oneArtist);\n    }\n    //add\n    async addArtist(artist) {\n        const newArtist = await doc(collection(this.firestore, 'artist'));\n        setDoc(newArtist, Object.assign(Object.assign({}, artist), { id: newArtist.id }));\n    }\n    //update\n    async updateArtist(id, newProp) {\n        await setDoc(doc(this.firestore, 'artist', id), newProp, {\n            merge: true,\n        });\n    }\n    //remove\n    removeArtist(id) {\n        deleteDoc(doc(this.firestore, 'artist', id));\n    }\n};\nArtistService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    })\n], ArtistService);\nexport { ArtistService };\n"]},"metadata":{},"sourceType":"module"}