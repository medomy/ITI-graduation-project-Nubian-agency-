{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Development/src/untitled folder/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { collection, collectionData } from '@angular/fire/firestore';\nimport { deleteDoc, doc, setDoc } from '@firebase/firestore';\nimport { docData } from 'rxfire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class CustomorderService {\n  constructor(firestore) {\n    this.firestore = firestore;\n  } //getAll\n\n\n  getCustoms() {\n    const dataCollection = collection(this.firestore, 'customService');\n    return collectionData(dataCollection);\n  } //get by id\n\n\n  getOneCustom(id) {\n    let oneCustom = doc(this.firestore, `customService`, id);\n    return docData(oneCustom);\n  } //add\n\n\n  addCustom(custom) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const newCustom = yield doc(collection(_this.firestore, 'customService'));\n      setDoc(newCustom, Object.assign(Object.assign({}, custom), {\n        id: newCustom.id\n      }));\n    })();\n  } //update\n\n\n  updateCustom(id, newprop) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield setDoc(doc(_this2.firestore, 'customService', id), newprop, {\n        merge: true\n      });\n    })();\n  } //remove\n\n\n  removeCustom(id) {\n    deleteDoc(doc(this.firestore, 'customService', id));\n  }\n\n}\n\nCustomorderService.ɵfac = function CustomorderService_Factory(t) {\n  return new (t || CustomorderService)(i0.ɵɵinject(i1.Firestore));\n};\n\nCustomorderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomorderService,\n  factory: CustomorderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/dev/Development/src/untitled folder/dashboard/src/app/core/services/customorder/customorder.service.ts"],"names":["collection","collectionData","deleteDoc","doc","setDoc","docData","i0","i1","CustomorderService","constructor","firestore","getCustoms","dataCollection","getOneCustom","id","oneCustom","addCustom","custom","newCustom","Object","assign","updateCustom","newprop","merge","removeCustom","ɵfac","CustomorderService_Factory","t","ɵɵinject","Firestore","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA4C,yBAA5C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,QAAwC,qBAAxC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,yBAApB;AACA,OAAO,MAAMC,kBAAN,CAAyB;AAC5BC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH,GAH2B,CAI5B;;;AACAC,EAAAA,UAAU,GAAG;AACT,UAAMC,cAAc,GAAGZ,UAAU,CAAC,KAAKU,SAAN,EAAiB,eAAjB,CAAjC;AACA,WAAOT,cAAc,CAACW,cAAD,CAArB;AACH,GAR2B,CAS5B;;;AACAC,EAAAA,YAAY,CAACC,EAAD,EAAK;AACb,QAAIC,SAAS,GAAGZ,GAAG,CAAC,KAAKO,SAAN,EAAkB,eAAlB,EAAkCI,EAAlC,CAAnB;AACA,WAAOT,OAAO,CAACU,SAAD,CAAd;AACH,GAb2B,CAc5B;;;AACMC,EAAAA,SAAS,CAACC,MAAD,EAAS;AAAA;;AAAA;AACpB,YAAMC,SAAS,SAASf,GAAG,CAACH,UAAU,CAAC,KAAI,CAACU,SAAN,EAAiB,eAAjB,CAAX,CAA3B;AACAN,MAAAA,MAAM,CAACc,SAAD,EAAYC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAAd,EAAyC;AAAEH,QAAAA,EAAE,EAAEI,SAAS,CAACJ;AAAhB,OAAzC,CAAZ,CAAN;AAFoB;AAGvB,GAlB2B,CAmB5B;;;AACMO,EAAAA,YAAY,CAACP,EAAD,EAAKQ,OAAL,EAAc;AAAA;;AAAA;AAC5B,YAAMlB,MAAM,CAACD,GAAG,CAAC,MAAI,CAACO,SAAN,EAAiB,eAAjB,EAAkCI,EAAlC,CAAJ,EAA2CQ,OAA3C,EAAoD;AAC5DC,QAAAA,KAAK,EAAE;AADqD,OAApD,CAAZ;AAD4B;AAI/B,GAxB2B,CAyB5B;;;AACAC,EAAAA,YAAY,CAACV,EAAD,EAAK;AACbZ,IAAAA,SAAS,CAACC,GAAG,CAAC,KAAKO,SAAN,EAAiB,eAAjB,EAAkCI,EAAlC,CAAJ,CAAT;AACH;;AA5B2B;;AA8BhCN,kBAAkB,CAACiB,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,SAAO,KAAKA,CAAC,IAAInB,kBAAV,EAA8BF,EAAE,CAACsB,QAAH,CAAYrB,EAAE,CAACsB,SAAf,CAA9B,CAAP;AAAkE,CAArI;;AACArB,kBAAkB,CAACsB,KAAnB,GAA2B,aAAcxB,EAAE,CAACyB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAExB,kBAAT;AAA6ByB,EAAAA,OAAO,EAAEzB,kBAAkB,CAACiB,IAAzD;AAA+DS,EAAAA,UAAU,EAAE;AAA3E,CAAtB,CAAzC","sourcesContent":["import { collection, collectionData, } from '@angular/fire/firestore';\nimport { deleteDoc, doc, setDoc, } from '@firebase/firestore';\nimport { docData } from 'rxfire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class CustomorderService {\n    constructor(firestore) {\n        this.firestore = firestore;\n    }\n    //getAll\n    getCustoms() {\n        const dataCollection = collection(this.firestore, 'customService');\n        return collectionData(dataCollection);\n    }\n    //get by id\n    getOneCustom(id) {\n        let oneCustom = doc(this.firestore, `customService`, id);\n        return docData(oneCustom);\n    }\n    //add\n    async addCustom(custom) {\n        const newCustom = await doc(collection(this.firestore, 'customService'));\n        setDoc(newCustom, Object.assign(Object.assign({}, custom), { id: newCustom.id }));\n    }\n    //update\n    async updateCustom(id, newprop) {\n        await setDoc(doc(this.firestore, 'customService', id), newprop, {\n            merge: true,\n        });\n    }\n    //remove\n    removeCustom(id) {\n        deleteDoc(doc(this.firestore, 'customService', id));\n    }\n}\nCustomorderService.ɵfac = function CustomorderService_Factory(t) { return new (t || CustomorderService)(i0.ɵɵinject(i1.Firestore)); };\nCustomorderService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CustomorderService, factory: CustomorderService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}