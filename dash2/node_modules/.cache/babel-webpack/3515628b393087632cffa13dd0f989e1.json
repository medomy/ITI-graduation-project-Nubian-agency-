{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Development/src/untitled folder/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { signOut, signInWithPopup, user, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile, sendPasswordResetEmail, onAuthStateChanged, deleteUser, GoogleAuthProvider, FacebookAuthProvider } from '@angular/fire/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nimport * as i2 from \"./../user/user.service\";\nimport * as i3 from \"./../address/address.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../Wishlist/wishlist.service\";\nimport * as i6 from \"../admin/admin.service\";\nexport class AuthService {\n  constructor(auth, userService, addressService, router, wishlistservice, adminService) {\n    this.auth = auth;\n    this.userService = userService;\n    this.addressService = addressService;\n    this.router = router;\n    this.wishlistservice = wishlistservice;\n    this.adminService = adminService;\n    this.loginStatus = false;\n    this.userExists = false;\n    this.isAdminStatus = new BehaviorSubject(false);\n    this.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.loginStatus = true;\n        this.userState = user;\n        localStorage.setItem('user', JSON.stringify(user));\n        this.isLoggedInAdmin(user.uid);\n      }\n    }); // or use this version...\n\n    this.user$ = new Observable(observer => onAuthStateChanged(auth, observer));\n  }\n\n  getUserObs() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.user$.pipe(take(1)).toPromise();\n    })();\n  }\n  /* Login */\n\n\n  Login(data) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const credential = yield signInWithEmailAndPassword(_this2.auth, data.email, data.password);\n      yield _this2.router.navigate(['/home']);\n    })();\n  }\n  /* Login */\n\n\n  LoginAdmin(data) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const credential = yield signInWithEmailAndPassword(_this3.auth, data.email, data.password);\n\n      _this3.router.navigate(['/admin/dashboard']);\n    })();\n  }\n  /* Register */\n\n\n  Register(data) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const credential = yield createUserWithEmailAndPassword(_this4.auth, data.email, data.password); // update user profile\n\n      yield updateProfile(credential.user, {\n        displayName: data.name,\n        photoURL: 'https://www.pngitem.com/pimgs/m/522-5220445_anonymous-profile-grey-person-sticker-glitch-empty-profile.png'\n      }); // create user in db\n\n      yield _this4.userService.createUser({\n        data: Object.assign(Object.assign({}, credential.user), {\n          phoneNumber: data.phone\n        })\n      }); // create address in db\n\n      yield _this4.addressService.createAddress({\n        data: Object.assign({}, credential.user)\n      }); // create wishlist in db\n\n      yield _this4.wishlistservice.createWishlist({\n        data: Object.assign({}, credential.user)\n      }); //navigate home\n\n      yield _this4.router.navigate(['/home']);\n    })();\n  }\n  /*login  with google */\n\n\n  loginGoogle() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const credential = yield signInWithPopup(_this5.auth, new GoogleAuthProvider());\n        yield _this5.checkWishList(credential);\n      } catch (error) {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message; // The email of the user's account used.\n\n        const email = error.email; // The AuthCredential type that was used.\n\n        const credential = GoogleAuthProvider.credentialFromError(error);\n      }\n    })();\n  }\n  /*login  with facebook */\n\n\n  loginFacebook() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const credential = yield signInWithPopup(_this6.auth, new FacebookAuthProvider());\n        yield _this6.checkWishList(credential);\n        console.log(user);\n      } catch (error) {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message; // The email of the user's account used.\n\n        const email = error.email; // The AuthCredential type that was used.\n\n        const credential = GoogleAuthProvider.credentialFromError(error);\n      }\n    })();\n  }\n\n  resetPassword(email) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      // sends reset password email\n      yield sendPasswordResetEmail(_this7.auth, email);\n    })();\n  }\n  /* Logout */\n\n\n  Logout() {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      signOut(_this8.auth).then( /*#__PURE__*/_asyncToGenerator(function* () {\n        _this8.loginStatus = false;\n        window.localStorage.removeItem('user');\n        localStorage.removeItem('admin');\n        localStorage.removeItem('__paypal_storage__');\n\n        _this8.router.navigate(['auth/login']);\n      })).catch(error => {\n        console.log(error);\n      });\n    })();\n  } //adminLogout\n\n\n  LogoutAdmin() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      signOut(_this9.auth).then(() => {\n        _this9.loginStatus = false;\n        window.localStorage.removeItem('user');\n        localStorage.removeItem('admin');\n        localStorage.removeItem('__paypal_storage__');\n\n        _this9.router.navigate(['/admin/admin-auth/login']);\n      }).catch(error => {\n        console.log(error);\n      });\n    })();\n  }\n  /*isLogin*/\n\n\n  isLoggedInAdmin(uid) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      _this10.adminService.getAdmin(uid).subscribe( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (admin) {\n          if (admin) {\n            window.localStorage.setItem('admin', JSON.stringify({\n              isAdmin: true\n            }));\n          }\n        });\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  get getuserLocal() {\n    return JSON.parse(window.localStorage.getItem('user'));\n  }\n  /*isLogin*/\n  // get isLoggedIn(): boolean {\n  //   return this.loginStatus;\n  // }\n\n\n  get isLoggedIn() {\n    return !!this.getuserLocal;\n  }\n\n  checkWishList(credential) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      yield (yield _this11.userService.getUsers()).subscribe(users => {\n        users.forEach(user => {\n          if (user.uid == credential.user.uid) {\n            _this11.userExists = true;\n          }\n        });\n      });\n\n      if (_this11.userExists == false) {\n        // create address in db\n        yield _this11.addressService.createAddress({\n          data: Object.assign({}, credential.user)\n        }); // create user in db\n\n        yield _this11.userService.createUser({\n          data: Object.assign(Object.assign({}, credential.user), {\n            phoneNumber: ' '\n          })\n        }); // create wishlist in db\n\n        yield _this11.wishlistservice.createWishlist({\n          data: Object.assign({}, credential.user)\n        });\n      }\n\n      yield _this11.router.navigate(['/home']);\n    })();\n  } // remeove crunnent user\n\n\n  removeCrunnetUserAuht() {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      yield deleteUser(_this12.userState).then(() => {\n        console.log('userRemoved');\n      }).catch(error => {\n        console.log(error);\n      });\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Auth), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i3.AddressService), i0.ɵɵinject(i4.Router), i0.ɵɵinject(i5.WishlistService), i0.ɵɵinject(i6.AdminService));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/dev/Development/src/untitled folder/dashboard/src/app/core/services/auth/auth.service.ts"],"names":["BehaviorSubject","Observable","take","signOut","signInWithPopup","user","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","sendPasswordResetEmail","onAuthStateChanged","deleteUser","GoogleAuthProvider","FacebookAuthProvider","i0","i1","i2","i3","i4","i5","i6","AuthService","constructor","auth","userService","addressService","router","wishlistservice","adminService","loginStatus","userExists","isAdminStatus","userState","localStorage","setItem","JSON","stringify","isLoggedInAdmin","uid","user$","observer","getUserObs","pipe","toPromise","Login","data","credential","email","password","navigate","LoginAdmin","Register","displayName","name","photoURL","createUser","Object","assign","phoneNumber","phone","createAddress","createWishlist","loginGoogle","checkWishList","error","errorCode","code","errorMessage","message","credentialFromError","loginFacebook","console","log","resetPassword","Logout","then","window","removeItem","catch","LogoutAdmin","getAdmin","subscribe","admin","isAdmin","getuserLocal","parse","getItem","isLoggedIn","getUsers","users","forEach","removeCrunnetUserAuht","ɵfac","AuthService_Factory","t","ɵɵinject","Auth","UserService","AddressService","Router","WishlistService","AdminService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { BehaviorSubject, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { signOut, signInWithPopup, user, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile, sendPasswordResetEmail, onAuthStateChanged, deleteUser, GoogleAuthProvider, FacebookAuthProvider, } from '@angular/fire/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nimport * as i2 from \"./../user/user.service\";\nimport * as i3 from \"./../address/address.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../Wishlist/wishlist.service\";\nimport * as i6 from \"../admin/admin.service\";\nexport class AuthService {\n    constructor(auth, userService, addressService, router, wishlistservice, adminService) {\n        this.auth = auth;\n        this.userService = userService;\n        this.addressService = addressService;\n        this.router = router;\n        this.wishlistservice = wishlistservice;\n        this.adminService = adminService;\n        this.loginStatus = false;\n        this.userExists = false;\n        this.isAdminStatus = new BehaviorSubject(false);\n        this.auth.onAuthStateChanged((user) => {\n            if (user) {\n                this.loginStatus = true;\n                this.userState = user;\n                localStorage.setItem('user', JSON.stringify(user));\n                this.isLoggedInAdmin(user.uid);\n            }\n        });\n        // or use this version...\n        this.user$ = new Observable((observer) => onAuthStateChanged(auth, observer));\n    }\n    async getUserObs() {\n        return await this.user$.pipe(take(1)).toPromise();\n    }\n    /* Login */\n    async Login(data) {\n        const credential = await signInWithEmailAndPassword(this.auth, data.email, data.password);\n        await this.router.navigate(['/home']);\n    }\n    /* Login */\n    async LoginAdmin(data) {\n        const credential = await signInWithEmailAndPassword(this.auth, data.email, data.password);\n        this.router.navigate(['/admin/dashboard']);\n    }\n    /* Register */\n    async Register(data) {\n        const credential = await createUserWithEmailAndPassword(this.auth, data.email, data.password);\n        // update user profile\n        await updateProfile(credential.user, {\n            displayName: data.name,\n            photoURL: 'https://www.pngitem.com/pimgs/m/522-5220445_anonymous-profile-grey-person-sticker-glitch-empty-profile.png',\n        });\n        // create user in db\n        await this.userService.createUser({\n            data: Object.assign(Object.assign({}, credential.user), { phoneNumber: data.phone }),\n        });\n        // create address in db\n        await this.addressService.createAddress({ data: Object.assign({}, credential.user) });\n        // create wishlist in db\n        await this.wishlistservice.createWishlist({\n            data: Object.assign({}, credential.user),\n        });\n        //navigate home\n        await this.router.navigate(['/home']);\n    }\n    /*login  with google */\n    async loginGoogle() {\n        try {\n            const credential = await signInWithPopup(this.auth, new GoogleAuthProvider());\n            await this.checkWishList(credential);\n        }\n        catch (error) {\n            // Handle Errors here.\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            // The email of the user's account used.\n            const email = error.email;\n            // The AuthCredential type that was used.\n            const credential = GoogleAuthProvider.credentialFromError(error);\n        }\n    }\n    /*login  with facebook */\n    async loginFacebook() {\n        try {\n            const credential = await signInWithPopup(this.auth, new FacebookAuthProvider());\n            await this.checkWishList(credential);\n            console.log(user);\n        }\n        catch (error) {\n            // Handle Errors here.\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            // The email of the user's account used.\n            const email = error.email;\n            // The AuthCredential type that was used.\n            const credential = GoogleAuthProvider.credentialFromError(error);\n        }\n    }\n    async resetPassword(email) {\n        // sends reset password email\n        await sendPasswordResetEmail(this.auth, email);\n    }\n    /* Logout */\n    async Logout() {\n        signOut(this.auth)\n            .then(async () => {\n            this.loginStatus = false;\n            window.localStorage.removeItem('user');\n            localStorage.removeItem('admin');\n            localStorage.removeItem('__paypal_storage__');\n            this.router.navigate(['auth/login']);\n        })\n            .catch((error) => {\n            console.log(error);\n        });\n    }\n    //adminLogout\n    async LogoutAdmin() {\n        signOut(this.auth)\n            .then(() => {\n            this.loginStatus = false;\n            window.localStorage.removeItem('user');\n            localStorage.removeItem('admin');\n            localStorage.removeItem('__paypal_storage__');\n            this.router.navigate(['/admin/admin-auth/login']);\n        })\n            .catch((error) => {\n            console.log(error);\n        });\n    }\n    /*isLogin*/\n    async isLoggedInAdmin(uid) {\n        this.adminService.getAdmin(uid).subscribe(async (admin) => {\n            if (admin) {\n                window.localStorage.setItem('admin', JSON.stringify({\n                    isAdmin: true,\n                }));\n            }\n        });\n    }\n    get getuserLocal() {\n        return JSON.parse(window.localStorage.getItem('user'));\n    }\n    /*isLogin*/\n    // get isLoggedIn(): boolean {\n    //   return this.loginStatus;\n    // }\n    get isLoggedIn() {\n        return !!this.getuserLocal;\n    }\n    async checkWishList(credential) {\n        await (await this.userService.getUsers()).subscribe((users) => {\n            users.forEach((user) => {\n                if (user.uid == credential.user.uid) {\n                    this.userExists = true;\n                }\n            });\n        });\n        if (this.userExists == false) {\n            // create address in db\n            await this.addressService.createAddress({\n                data: Object.assign({}, credential.user),\n            });\n            // create user in db\n            await this.userService.createUser({\n                data: Object.assign(Object.assign({}, credential.user), { phoneNumber: ' ' }),\n            });\n            // create wishlist in db\n            await this.wishlistservice.createWishlist({\n                data: Object.assign({}, credential.user),\n            });\n        }\n        await this.router.navigate(['/home']);\n    }\n    // remeove crunnent user\n    async removeCrunnetUserAuht() {\n        await deleteUser(this.userState)\n            .then(() => {\n            console.log('userRemoved');\n        })\n            .catch((error) => {\n            console.log(error);\n        });\n    }\n}\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.Auth), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i3.AddressService), i0.ɵɵinject(i4.Router), i0.ɵɵinject(i5.WishlistService), i0.ɵɵinject(i6.AdminService)); };\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}