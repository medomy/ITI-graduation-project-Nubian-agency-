{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Development/src/untitled folder/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl, FormGroup, Validators, VERSION } from '@angular/forms';\nimport { HttpResponse, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/core/services/storage/storage.service\";\nimport * as i3 from \"src/app/core/services/categories/categories.service\";\nimport * as i4 from \"src/app/core/services/Artist/artist.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"src/app/core/services/toast/toasts.service\";\nexport class UpdateArtistComponent {\n  constructor(http, uploadService, categoriesService, artistService, router, route, toastService) {\n    var _this = this;\n\n    this.http = http;\n    this.uploadService = uploadService;\n    this.categoriesService = categoriesService;\n    this.artistService = artistService;\n    this.router = router;\n    this.route = route;\n    this.toastService = toastService;\n    this.uploadSuccess = false;\n    this.addSuccess = false;\n    this.aristForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      country: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      gender: new FormControl('', Validators.required),\n      date: new FormControl('', Validators.required),\n      department: new FormControl('', Validators.required),\n      avatar: new FormControl('')\n    });\n    this.version = VERSION;\n    this.router.params.subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (param) {\n        yield _this.artistService.getOneArtist(param.id).subscribe( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (data) {\n            yield _this.categoriesService.getOneCategory(data.department).subscribe( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator(function* (data2) {\n                _this.currentCategeory = yield data2;\n              });\n\n              return function (_x3) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n            _this.currentArtist = yield data; // console.log(data);\n          });\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    this.categeories = this.categoriesService.getcategoriess().subscribe( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (data) {\n        _this.categeories = yield data;\n      });\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  }\n\n  get name() {\n    return this.aristForm.get('name');\n  }\n\n  get email() {\n    return this.aristForm.get('email');\n  }\n\n  get country() {\n    return this.aristForm.get('country');\n  }\n\n  get gender() {\n    return this.aristForm.get('gender');\n  }\n\n  get date() {\n    return this.aristForm.get('date');\n  }\n\n  get department() {\n    return this.aristForm.get('department');\n  }\n\n  updateArtist() {\n    console.log(this.aristForm);\n\n    if (!this.selectedFiles && this.aristForm.valid) {\n      this.artistService.updateArtist(this.currentArtist.id, {\n        name: this.name.value,\n        dateOfBirth: this.date.value,\n        country: this.country.value,\n        email: this.email.value,\n        gender: this.gender.value,\n        department: this.department.value,\n        TimeStamp: {\n          updatedAt: new Date().toDateString()\n        }\n      }).then(() => {\n        this.addSuccess = true;\n        setTimeout(() => {\n          this.route.navigate(['/admin/artists']);\n        }, 500);\n      });\n    } else if (this.selectedFiles) {\n      this.uploadService.upload('images/arists', this.selectedFiles[0].name, this.selectedFiles[0]).then(data => {\n        if (data && this.selectedFiles && this.uploadSuccess && this.aristForm.valid) {\n          this.artistService.updateArtist(this.currentArtist.id, {\n            name: this.name.value,\n            dateOfBirth: this.date.value,\n            country: this.country.value,\n            email: this.email.value,\n            gender: this.gender.value,\n            department: this.department.value,\n            avatar: data,\n            TimeStamp: {\n              updatedAt: new Date().toDateString()\n            }\n          }).then(() => {\n            this.addSuccess = true;\n            setTimeout(() => {\n              this.route.navigate(['/admin/artists']);\n            }, 500);\n          });\n        }\n      });\n    }\n  }\n\n  upload(files) {\n    this.uploadAndProgress(files);\n    this.selectedFiles = files;\n  }\n\n  uploadAndProgress(files) {\n    var formData = new FormData();\n    Array.from(files).forEach(f => formData.append('file', f));\n    this.http.post('https://file.io', formData, {\n      reportProgress: true,\n      observe: 'events'\n    }).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        this.percentDone = Math.round(100 * event.loaded / event.total);\n        console.log(files);\n      } else if (event instanceof HttpResponse) {\n        this.uploadSuccess = true;\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  showSuccess() {\n    this.toastService.show('update success wait..', {\n      classname: 'bg-success text-light',\n      delay: 1000\n    });\n  }\n\n}\n\nUpdateArtistComponent.ɵfac = function UpdateArtistComponent_Factory(t) {\n  return new (t || UpdateArtistComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.CategoriesService), i0.ɵɵdirectiveInject(i4.ArtistService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.ToastsService));\n};\n\nUpdateArtistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateArtistComponent,\n  selectors: [[\"app-update-artist\"]],\n  decls: 2,\n  vars: 0,\n  template: function UpdateArtistComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"update-artist works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".toasts-postion[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 5%;\\n  right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZS1hcnRpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsUUFBUTtBQUNWIiwiZmlsZSI6InVwZGF0ZS1hcnRpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b2FzdHMtcG9zdGlvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiA1JTtcbiAgcmlnaHQ6IDA7XG59XG4iXX0= */\"]\n});","map":{"version":3,"sources":["/home/dev/Development/src/untitled folder/dashboard/src/app/components/artists/update-artist/update-artist.component.ts"],"names":["FormControl","FormGroup","Validators","VERSION","HttpResponse","HttpEventType","i0","i1","i2","i3","i4","i5","i6","UpdateArtistComponent","constructor","http","uploadService","categoriesService","artistService","router","route","toastService","uploadSuccess","addSuccess","aristForm","name","required","minLength","email","country","gender","date","department","avatar","version","params","subscribe","param","getOneArtist","id","data","getOneCategory","data2","currentCategeory","currentArtist","categeories","getcategoriess","get","updateArtist","console","log","selectedFiles","valid","value","dateOfBirth","TimeStamp","updatedAt","Date","toDateString","then","setTimeout","navigate","upload","files","uploadAndProgress","formData","FormData","Array","from","forEach","f","append","post","reportProgress","observe","event","type","UploadProgress","percentDone","Math","round","loaded","total","ngOnInit","showSuccess","show","classname","delay","ɵfac","UpdateArtistComponent_Factory","t","ɵɵdirectiveInject","HttpClient","StorageService","CategoriesService","ArtistService","ActivatedRoute","Router","ToastsService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","template","UpdateArtistComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"mappings":"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","sourcesContent":["import { FormControl, FormGroup, Validators, VERSION } from '@angular/forms';\nimport { HttpResponse, HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/core/services/storage/storage.service\";\nimport * as i3 from \"src/app/core/services/categories/categories.service\";\nimport * as i4 from \"src/app/core/services/Artist/artist.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"src/app/core/services/toast/toasts.service\";\nexport class UpdateArtistComponent {\n    constructor(http, uploadService, categoriesService, artistService, router, route, toastService) {\n        this.http = http;\n        this.uploadService = uploadService;\n        this.categoriesService = categoriesService;\n        this.artistService = artistService;\n        this.router = router;\n        this.route = route;\n        this.toastService = toastService;\n        this.uploadSuccess = false;\n        this.addSuccess = false;\n        this.aristForm = new FormGroup({\n            name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n            email: new FormControl('', [Validators.required, Validators.email]),\n            country: new FormControl('', [\n                Validators.required,\n                Validators.minLength(3),\n            ]),\n            gender: new FormControl('', Validators.required),\n            date: new FormControl('', Validators.required),\n            department: new FormControl('', Validators.required),\n            avatar: new FormControl(''),\n        });\n        this.version = VERSION;\n        this.router.params.subscribe(async (param) => {\n            await this.artistService\n                .getOneArtist(param.id)\n                .subscribe(async (data) => {\n                await this.categoriesService\n                    .getOneCategory(data.department)\n                    .subscribe(async (data2) => {\n                    this.currentCategeory = await data2;\n                });\n                this.currentArtist = await data;\n                // console.log(data);\n            });\n        });\n        this.categeories = this.categoriesService\n            .getcategoriess()\n            .subscribe(async (data) => {\n            this.categeories = await data;\n        });\n    }\n    get name() {\n        return this.aristForm.get('name');\n    }\n    get email() {\n        return this.aristForm.get('email');\n    }\n    get country() {\n        return this.aristForm.get('country');\n    }\n    get gender() {\n        return this.aristForm.get('gender');\n    }\n    get date() {\n        return this.aristForm.get('date');\n    }\n    get department() {\n        return this.aristForm.get('department');\n    }\n    updateArtist() {\n        console.log(this.aristForm);\n        if (!this.selectedFiles && this.aristForm.valid) {\n            this.artistService\n                .updateArtist(this.currentArtist.id, {\n                name: this.name.value,\n                dateOfBirth: this.date.value,\n                country: this.country.value,\n                email: this.email.value,\n                gender: this.gender.value,\n                department: this.department.value,\n                TimeStamp: {\n                    updatedAt: new Date().toDateString(),\n                },\n            })\n                .then(() => {\n                this.addSuccess = true;\n                setTimeout(() => {\n                    this.route.navigate(['/admin/artists']);\n                }, 500);\n            });\n        }\n        else if (this.selectedFiles) {\n            this.uploadService\n                .upload('images/arists', this.selectedFiles[0].name, this.selectedFiles[0])\n                .then((data) => {\n                if (data &&\n                    this.selectedFiles &&\n                    this.uploadSuccess &&\n                    this.aristForm.valid) {\n                    this.artistService\n                        .updateArtist(this.currentArtist.id, {\n                        name: this.name.value,\n                        dateOfBirth: this.date.value,\n                        country: this.country.value,\n                        email: this.email.value,\n                        gender: this.gender.value,\n                        department: this.department.value,\n                        avatar: data,\n                        TimeStamp: {\n                            updatedAt: new Date().toDateString(),\n                        },\n                    })\n                        .then(() => {\n                        this.addSuccess = true;\n                        setTimeout(() => {\n                            this.route.navigate(['/admin/artists']);\n                        }, 500);\n                    });\n                }\n            });\n        }\n    }\n    upload(files) {\n        this.uploadAndProgress(files);\n        this.selectedFiles = files;\n    }\n    uploadAndProgress(files) {\n        var formData = new FormData();\n        Array.from(files).forEach((f) => formData.append('file', f));\n        this.http\n            .post('https://file.io', formData, {\n            reportProgress: true,\n            observe: 'events',\n        })\n            .subscribe((event) => {\n            if (event.type === HttpEventType.UploadProgress) {\n                this.percentDone = Math.round((100 * event.loaded) / event.total);\n                console.log(files);\n            }\n            else if (event instanceof HttpResponse) {\n                this.uploadSuccess = true;\n            }\n        });\n    }\n    ngOnInit() { }\n    showSuccess() {\n        this.toastService.show('update success wait..', {\n            classname: 'bg-success text-light',\n            delay: 1000,\n        });\n    }\n}\nUpdateArtistComponent.ɵfac = function UpdateArtistComponent_Factory(t) { return new (t || UpdateArtistComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.CategoriesService), i0.ɵɵdirectiveInject(i4.ArtistService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.ToastsService)); };\nUpdateArtistComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: UpdateArtistComponent, selectors: [[\"app-update-artist\"]], decls: 2, vars: 0, template: function UpdateArtistComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"update-artist works!\");\n        i0.ɵɵelementEnd();\n    } }, styles: [\".toasts-postion[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 5%;\\n  right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZS1hcnRpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsUUFBUTtBQUNWIiwiZmlsZSI6InVwZGF0ZS1hcnRpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b2FzdHMtcG9zdGlvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiA1JTtcbiAgcmlnaHQ6IDA7XG59XG4iXX0= */\"] });\n"]},"metadata":{},"sourceType":"module"}