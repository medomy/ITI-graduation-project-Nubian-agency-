{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Development/src/untitled folder/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { collection, getDocs } from '@angular/fire/firestore';\nimport { deleteDoc, doc, setDoc } from '@firebase/firestore';\nimport { docData } from 'rxfire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class WishlistService {\n  constructor(firestore) {\n    this.firestore = firestore;\n  } //getAll\n\n\n  getAllWishLists() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //let data = collection(this.firestore, \"wishList\");\n      let WishlistItems = [];\n      const querySnapshot = yield getDocs(collection(_this.firestore, 'wishList'));\n      querySnapshot.forEach(docu => {\n        WishlistItems.push(Object.assign(Object.assign({}, docu.data()), {\n          id: docu.id\n        }));\n      });\n      return WishlistItems; //return collectionData(data);\n    })();\n  }\n  /*getWishlistItems() {\n  let data = collection(this.firestore, \"wishList\");\n  const WishlistItems = [];\n  onSnapshot(data, (querySnapshot) => {\n       querySnapshot.forEach((doc) => {\n      WishlistItems.push({ ...doc.data(), id: doc.id })\n    });\n     });\n  return WishlistItems\n   }*/\n  //get by id\n\n\n  getOneWishlistItem(id) {\n    let oneWishlistItem = doc(this.firestore, 'wishList', id);\n    return docData(oneWishlistItem);\n  } //add\n  //creat wishlist\n\n\n  createWishlist({\n    data\n  }) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.wishList = {\n        userUid: data.uid,\n        productsIds: [],\n        timestamp: {\n          createdAt: new Date().toDateString(),\n          removedAt: null,\n          updatedAt: null\n        }\n      };\n      yield setDoc(doc(collection(_this2.firestore, 'wishList')), _this2.wishList);\n    })();\n  }\n  /*async addWishlist(Item : Iwishlist){\n  //Item = {}\n  await setDoc(doc(collection(this.firestore,\"wishList\")),Item)\n  }*/\n  //update\n\n\n  updateWishlist(id, newProp) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield setDoc(doc(_this3.firestore, 'wishList', id), newProp, {\n        merge: true\n      });\n    })();\n  } //remove\n\n\n  removeWishlist(id) {\n    deleteDoc(doc(this.firestore, 'wishList', id));\n  } // getting wishlist by uid\n\n\n  getWishListByUid(UID) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let myWishList;\n      yield _this4.getAllWishLists().then(wishLists => wishLists.forEach(wishList => {\n        if (wishList.userUid == UID) {\n          myWishList = wishList;\n        }\n      }));\n      return myWishList;\n    })();\n  }\n\n}\n\nWishlistService.ɵfac = function WishlistService_Factory(t) {\n  return new (t || WishlistService)(i0.ɵɵinject(i1.Firestore));\n};\n\nWishlistService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WishlistService,\n  factory: WishlistService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/dev/Development/src/untitled folder/dashboard/src/app/core/services/Wishlist/wishlist.service.ts"],"names":["collection","getDocs","deleteDoc","doc","setDoc","docData","i0","i1","WishlistService","constructor","firestore","getAllWishLists","WishlistItems","querySnapshot","forEach","docu","push","Object","assign","data","id","getOneWishlistItem","oneWishlistItem","createWishlist","wishList","userUid","uid","productsIds","timestamp","createdAt","Date","toDateString","removedAt","updatedAt","updateWishlist","newProp","merge","removeWishlist","getWishListByUid","UID","myWishList","then","wishLists","ɵfac","WishlistService_Factory","t","ɵɵinject","Firestore","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { collection, getDocs, } from '@angular/fire/firestore';\nimport { deleteDoc, doc, setDoc } from '@firebase/firestore';\nimport { docData } from 'rxfire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class WishlistService {\n    constructor(firestore) {\n        this.firestore = firestore;\n    }\n    //getAll\n    async getAllWishLists() {\n        //let data = collection(this.firestore, \"wishList\");\n        let WishlistItems = [];\n        const querySnapshot = await getDocs(collection(this.firestore, 'wishList'));\n        querySnapshot.forEach((docu) => {\n            WishlistItems.push(Object.assign(Object.assign({}, docu.data()), { id: docu.id }));\n        });\n        return WishlistItems;\n        //return collectionData(data);\n    }\n    /*getWishlistItems() {\n    let data = collection(this.firestore, \"wishList\");\n    const WishlistItems = [];\n    onSnapshot(data, (querySnapshot) => {\n  \n      querySnapshot.forEach((doc) => {\n        WishlistItems.push({ ...doc.data(), id: doc.id })\n      });\n  \n    });\n    return WishlistItems\n  \n  }*/\n    //get by id\n    getOneWishlistItem(id) {\n        let oneWishlistItem = doc(this.firestore, 'wishList', id);\n        return docData(oneWishlistItem);\n    }\n    //add\n    //creat wishlist\n    async createWishlist({ data }) {\n        this.wishList = {\n            userUid: data.uid,\n            productsIds: [],\n            timestamp: {\n                createdAt: new Date().toDateString(),\n                removedAt: null,\n                updatedAt: null,\n            },\n        };\n        await setDoc(doc(collection(this.firestore, 'wishList')), this.wishList);\n    }\n    /*async addWishlist(Item : Iwishlist){\n    //Item = {}\n    await setDoc(doc(collection(this.firestore,\"wishList\")),Item)\n  }*/\n    //update\n    async updateWishlist(id, newProp) {\n        await setDoc(doc(this.firestore, 'wishList', id), newProp, { merge: true });\n    }\n    //remove\n    removeWishlist(id) {\n        deleteDoc(doc(this.firestore, 'wishList', id));\n    }\n    // getting wishlist by uid\n    async getWishListByUid(UID) {\n        let myWishList;\n        await this.getAllWishLists().then((wishLists) => wishLists.forEach((wishList) => {\n            if (wishList.userUid == UID) {\n                myWishList = wishList;\n            }\n        }));\n        return myWishList;\n    }\n}\nWishlistService.ɵfac = function WishlistService_Factory(t) { return new (t || WishlistService)(i0.ɵɵinject(i1.Firestore)); };\nWishlistService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: WishlistService, factory: WishlistService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}