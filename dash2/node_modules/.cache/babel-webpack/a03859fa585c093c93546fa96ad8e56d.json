{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Development/src/untitled folder/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/auth/auth.service\";\nimport * as i3 from \"../../services/admin/admin.service\";\nimport * as i4 from \"../../services/auth/admin/aut-admin.service\";\nexport class LoginComponent {\n  constructor(router, authService, adminService, authAdmin) {\n    var _this = this;\n\n    this.router = router;\n    this.authService = authService;\n    this.adminService = adminService;\n    this.authAdmin = authAdmin;\n    this.user = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.minLength(8), Validators.required])\n    });\n    this.errors = [];\n    this.adminService.getAllAdmin().subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (data) {\n        _this.admins = yield data;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  ngOnInit() {}\n\n  get email() {\n    return this.user.get('email');\n  }\n\n  get password() {\n    return this.user.get('password');\n  }\n\n  login() {\n    var _a, _b;\n\n    if (this.user.invalid) {\n      if ((_a = this.email) === null || _a === void 0 ? void 0 : _a.invalid) this.errors.push('Email Is Invalid');\n      if ((_b = this.password) === null || _b === void 0 ? void 0 : _b.invalid) this.errors.push('Password Is Invalid');\n      return;\n    } else if (this.admins.find(data => data.email == this.email.value)) {\n      console.log('isAmdin');\n      this.authService.Login(this.user.value);\n    } else {\n      this.errors.push('Your not authorized');\n    }\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.AdminService), i0.ɵɵdirectiveInject(i4.AutAdminService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 2,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/dev/Development/src/untitled folder/dashboard/src/app/core/components/login/login.component.ts"],"names":["FormControl","FormGroup","Validators","i0","i1","i2","i3","i4","LoginComponent","constructor","router","authService","adminService","authAdmin","user","email","required","password","minLength","errors","getAllAdmin","subscribe","data","admins","ngOnInit","get","login","_a","_b","invalid","push","find","value","console","log","Login","ɵfac","LoginComponent_Factory","t","ɵɵdirectiveInject","Router","AuthService","AdminService","AutAdminService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"mappings":"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","sourcesContent":["import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/auth/auth.service\";\nimport * as i3 from \"../../services/admin/admin.service\";\nimport * as i4 from \"../../services/auth/admin/aut-admin.service\";\nexport class LoginComponent {\n    constructor(router, authService, adminService, authAdmin) {\n        this.router = router;\n        this.authService = authService;\n        this.adminService = adminService;\n        this.authAdmin = authAdmin;\n        this.user = new FormGroup({\n            email: new FormControl('', [Validators.required, Validators.email]),\n            password: new FormControl('', [\n                Validators.minLength(8),\n                Validators.required,\n            ]),\n        });\n        this.errors = [];\n        this.adminService.getAllAdmin().subscribe(async (data) => {\n            this.admins = await data;\n        });\n    }\n    ngOnInit() { }\n    get email() {\n        return this.user.get('email');\n    }\n    get password() {\n        return this.user.get('password');\n    }\n    login() {\n        var _a, _b;\n        if (this.user.invalid) {\n            if ((_a = this.email) === null || _a === void 0 ? void 0 : _a.invalid)\n                this.errors.push('Email Is Invalid');\n            if ((_b = this.password) === null || _b === void 0 ? void 0 : _b.invalid)\n                this.errors.push('Password Is Invalid');\n            return;\n        }\n        else if (this.admins.find((data) => data.email == this.email.value)) {\n            console.log('isAmdin');\n            this.authService.Login(this.user.value);\n        }\n        else {\n            this.errors.push('Your not authorized');\n        }\n    }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.AdminService), i0.ɵɵdirectiveInject(i4.AutAdminService)); };\nLoginComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LoginComponent, selectors: [[\"app-login\"]], decls: 2, vars: 0, template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login works!\");\n        i0.ɵɵelementEnd();\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"] });\n"]},"metadata":{},"sourceType":"module"}