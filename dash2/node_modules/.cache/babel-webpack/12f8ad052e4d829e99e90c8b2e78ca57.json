{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Desktop/final relase/Nubian-Agancy/Client-Side/dash2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { collection, collectionData } from \"@angular/fire/firestore\";\nimport { deleteDoc, doc, setDoc } from \"@firebase/firestore\";\nimport { docData } from \"rxfire/firestore\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class ProductsService {\n  constructor(firestore) {\n    this.firestore = firestore;\n  } //getAll\n\n\n  getProducts() {\n    const dataCollection = collection(this.firestore, \"services\");\n    return collectionData(dataCollection);\n  }\n\n  getOneProduct(id) {\n    let oneProduct = doc(this.firestore, `services`, id);\n    return docData(oneProduct);\n  } //add\n\n\n  addProduct(product) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const newProduct = yield doc(collection(_this.firestore, \"services\"));\n      setDoc(newProduct, Object.assign(Object.assign({}, product), {\n        id: newProduct.id\n      })); // await setDoc(newProduct,{product});\n\n      console.log(\"prodcut add successfully...\");\n    })();\n  }\n\n  addProduct2(product) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const newProduct = yield doc(collection(_this2.firestore, \"servicess\"));\n      setDoc(newProduct, Object.assign(Object.assign({}, product), {\n        id: newProduct.id\n      })); // await setDoc(newProduct,{product});\n\n      console.log(\"prodcut add successfully...\");\n    })();\n  } //update\n\n\n  updateProduct(id, newprop) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield setDoc(doc(_this3.firestore, \"services\", id), newprop, {\n        merge: true\n      });\n    })();\n  } //remove\n\n\n  removeProduct(id) {\n    deleteDoc(doc(this.firestore, \"services\", id));\n  }\n\n}\n\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.Firestore));\n};\n\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"sources":["/home/dev/Desktop/final relase/Nubian-Agancy/Client-Side/dash2/src/app/core/services/products/products.service.ts"],"names":["collection","collectionData","deleteDoc","doc","setDoc","docData","i0","i1","ProductsService","constructor","firestore","getProducts","dataCollection","getOneProduct","id","oneProduct","addProduct","product","newProduct","Object","assign","console","log","addProduct2","updateProduct","newprop","merge","removeProduct","ɵfac","ProductsService_Factory","t","ɵɵinject","Firestore","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA4C,yBAA5C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,QAAwC,qBAAxC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,yBAApB;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH,GAHwB,CAIzB;;;AACAC,EAAAA,WAAW,GAAG;AACV,UAAMC,cAAc,GAAGZ,UAAU,CAAC,KAAKU,SAAN,EAAiB,UAAjB,CAAjC;AACA,WAAOT,cAAc,CAACW,cAAD,CAArB;AACH;;AACDC,EAAAA,aAAa,CAACC,EAAD,EAAK;AACd,QAAIC,UAAU,GAAGZ,GAAG,CAAC,KAAKO,SAAN,EAAkB,UAAlB,EAA6BI,EAA7B,CAApB;AACA,WAAOT,OAAO,CAACU,UAAD,CAAd;AACH,GAZwB,CAazB;;;AACMC,EAAAA,UAAU,CAACC,OAAD,EAAU;AAAA;;AAAA;AACtB,YAAMC,UAAU,SAASf,GAAG,CAACH,UAAU,CAAC,KAAI,CAACU,SAAN,EAAiB,UAAjB,CAAX,CAA5B;AACAN,MAAAA,MAAM,CAACc,UAAD,EAAaC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,CAAd,EAA0C;AAAEH,QAAAA,EAAE,EAAEI,UAAU,CAACJ;AAAjB,OAA1C,CAAb,CAAN,CAFsB,CAGtB;;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAJsB;AAKzB;;AACKC,EAAAA,WAAW,CAACN,OAAD,EAAU;AAAA;;AAAA;AACvB,YAAMC,UAAU,SAASf,GAAG,CAACH,UAAU,CAAC,MAAI,CAACU,SAAN,EAAiB,WAAjB,CAAX,CAA5B;AACAN,MAAAA,MAAM,CAACc,UAAD,EAAaC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,CAAd,EAA0C;AAAEH,QAAAA,EAAE,EAAEI,UAAU,CAACJ;AAAjB,OAA1C,CAAb,CAAN,CAFuB,CAGvB;;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAJuB;AAK1B,GAzBwB,CA0BzB;;;AACME,EAAAA,aAAa,CAACV,EAAD,EAAKW,OAAL,EAAc;AAAA;;AAAA;AAC7B,YAAMrB,MAAM,CAACD,GAAG,CAAC,MAAI,CAACO,SAAN,EAAiB,UAAjB,EAA6BI,EAA7B,CAAJ,EAAsCW,OAAtC,EAA+C;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA/C,CAAZ;AAD6B;AAEhC,GA7BwB,CA8BzB;;;AACAC,EAAAA,aAAa,CAACb,EAAD,EAAK;AACdZ,IAAAA,SAAS,CAACC,GAAG,CAAC,KAAKO,SAAN,EAAiB,UAAjB,EAA6BI,EAA7B,CAAJ,CAAT;AACH;;AAjCwB;;AAmC7BN,eAAe,CAACoB,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAItB,eAAV,EAA2BF,EAAE,CAACyB,QAAH,CAAYxB,EAAE,CAACyB,SAAf,CAA3B,CAAP;AAA+D,CAA5H;;AACAxB,eAAe,CAACyB,KAAhB,GAAwB,aAAc3B,EAAE,CAAC4B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE3B,eAAT;AAA0B4B,EAAAA,OAAO,EAAE5B,eAAe,CAACoB,IAAnD;AAAyDS,EAAAA,UAAU,EAAE;AAArE,CAAtB,CAAtC","sourcesContent":["import { collection, collectionData, } from \"@angular/fire/firestore\";\nimport { deleteDoc, doc, setDoc, } from \"@firebase/firestore\";\nimport { docData } from \"rxfire/firestore\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class ProductsService {\n    constructor(firestore) {\n        this.firestore = firestore;\n    }\n    //getAll\n    getProducts() {\n        const dataCollection = collection(this.firestore, \"services\");\n        return collectionData(dataCollection);\n    }\n    getOneProduct(id) {\n        let oneProduct = doc(this.firestore, `services`, id);\n        return docData(oneProduct);\n    }\n    //add\n    async addProduct(product) {\n        const newProduct = await doc(collection(this.firestore, \"services\"));\n        setDoc(newProduct, Object.assign(Object.assign({}, product), { id: newProduct.id }));\n        // await setDoc(newProduct,{product});\n        console.log(\"prodcut add successfully...\");\n    }\n    async addProduct2(product) {\n        const newProduct = await doc(collection(this.firestore, \"servicess\"));\n        setDoc(newProduct, Object.assign(Object.assign({}, product), { id: newProduct.id }));\n        // await setDoc(newProduct,{product});\n        console.log(\"prodcut add successfully...\");\n    }\n    //update\n    async updateProduct(id, newprop) {\n        await setDoc(doc(this.firestore, \"services\", id), newprop, { merge: true });\n    }\n    //remove\n    removeProduct(id) {\n        deleteDoc(doc(this.firestore, \"services\", id));\n    }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) { return new (t || ProductsService)(i0.ɵɵinject(i1.Firestore)); };\nProductsService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ProductsService, factory: ProductsService.ɵfac, providedIn: \"root\" });\n"]},"metadata":{},"sourceType":"module"}