{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Development/src/Nubian-Agancy/Client-Side/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { collection, collectionData } from '@angular/fire/firestore';\nimport { deleteDoc, doc, setDoc } from '@firebase/firestore';\nimport { docData } from 'rxfire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class ArtistService {\n  constructor(firestore) {\n    this.firestore = firestore;\n  } //getAll\n\n\n  getArtists() {\n    const dataCollection = collection(this.firestore, 'artist');\n    return collectionData(dataCollection);\n  } //get by id\n\n\n  getOneArtist(id) {\n    let oneArtist = doc(this.firestore, `artist`, id);\n    return docData(oneArtist);\n  } //add\n\n\n  addArtist(artist) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const newArtist = yield doc(collection(_this.firestore, 'artist'));\n      setDoc(newArtist, Object.assign(Object.assign({}, artist), {\n        id: newArtist.id\n      }));\n    })();\n  } //update\n\n\n  updateArtist(id, newProp) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield setDoc(doc(_this2.firestore, 'artist', id), newProp, {\n        merge: true\n      });\n    })();\n  } //remove\n\n\n  removeArtist(id) {\n    deleteDoc(doc(this.firestore, 'artist', id));\n  }\n\n}\n\nArtistService.ɵfac = function ArtistService_Factory(t) {\n  return new (t || ArtistService)(i0.ɵɵinject(i1.Firestore));\n};\n\nArtistService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ArtistService,\n  factory: ArtistService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/dev/Development/src/Nubian-Agancy/Client-Side/dashboard/src/app/core/services/Artist/artist.service.ts"],"names":["collection","collectionData","deleteDoc","doc","setDoc","docData","i0","i1","ArtistService","constructor","firestore","getArtists","dataCollection","getOneArtist","id","oneArtist","addArtist","artist","newArtist","Object","assign","updateArtist","newProp","merge","removeArtist","ɵfac","ArtistService_Factory","t","ɵɵinject","Firestore","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA4C,yBAA5C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,QAAuC,qBAAvC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,yBAApB;AACA,OAAO,MAAMC,aAAN,CAAoB;AACvBC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH,GAHsB,CAIvB;;;AACAC,EAAAA,UAAU,GAAG;AACT,UAAMC,cAAc,GAAGZ,UAAU,CAAC,KAAKU,SAAN,EAAiB,QAAjB,CAAjC;AACA,WAAOT,cAAc,CAACW,cAAD,CAArB;AACH,GARsB,CASvB;;;AACAC,EAAAA,YAAY,CAACC,EAAD,EAAK;AACb,QAAIC,SAAS,GAAGZ,GAAG,CAAC,KAAKO,SAAN,EAAkB,QAAlB,EAA2BI,EAA3B,CAAnB;AACA,WAAOT,OAAO,CAACU,SAAD,CAAd;AACH,GAbsB,CAcvB;;;AACMC,EAAAA,SAAS,CAACC,MAAD,EAAS;AAAA;;AAAA;AACpB,YAAMC,SAAS,SAASf,GAAG,CAACH,UAAU,CAAC,KAAI,CAACU,SAAN,EAAiB,QAAjB,CAAX,CAA3B;AACAN,MAAAA,MAAM,CAACc,SAAD,EAAYC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAAd,EAAyC;AAAEH,QAAAA,EAAE,EAAEI,SAAS,CAACJ;AAAhB,OAAzC,CAAZ,CAAN;AAFoB;AAGvB,GAlBsB,CAmBvB;;;AACMO,EAAAA,YAAY,CAACP,EAAD,EAAKQ,OAAL,EAAc;AAAA;;AAAA;AAC5B,YAAMlB,MAAM,CAACD,GAAG,CAAC,MAAI,CAACO,SAAN,EAAiB,QAAjB,EAA2BI,EAA3B,CAAJ,EAAoCQ,OAApC,EAA6C;AACrDC,QAAAA,KAAK,EAAE;AAD8C,OAA7C,CAAZ;AAD4B;AAI/B,GAxBsB,CAyBvB;;;AACAC,EAAAA,YAAY,CAACV,EAAD,EAAK;AACbZ,IAAAA,SAAS,CAACC,GAAG,CAAC,KAAKO,SAAN,EAAiB,QAAjB,EAA2BI,EAA3B,CAAJ,CAAT;AACH;;AA5BsB;;AA8B3BN,aAAa,CAACiB,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAInB,aAAV,EAAyBF,EAAE,CAACsB,QAAH,CAAYrB,EAAE,CAACsB,SAAf,CAAzB,CAAP;AAA6D,CAAtH;;AACArB,aAAa,CAACsB,KAAd,GAAsB,aAAcxB,EAAE,CAACyB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAExB,aAAT;AAAwByB,EAAAA,OAAO,EAAEzB,aAAa,CAACiB,IAA/C;AAAqDS,EAAAA,UAAU,EAAE;AAAjE,CAAtB,CAApC","sourcesContent":["import { collection, collectionData, } from '@angular/fire/firestore';\nimport { deleteDoc, doc, setDoc } from '@firebase/firestore';\nimport { docData } from 'rxfire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class ArtistService {\n    constructor(firestore) {\n        this.firestore = firestore;\n    }\n    //getAll\n    getArtists() {\n        const dataCollection = collection(this.firestore, 'artist');\n        return collectionData(dataCollection);\n    }\n    //get by id\n    getOneArtist(id) {\n        let oneArtist = doc(this.firestore, `artist`, id);\n        return docData(oneArtist);\n    }\n    //add\n    async addArtist(artist) {\n        const newArtist = await doc(collection(this.firestore, 'artist'));\n        setDoc(newArtist, Object.assign(Object.assign({}, artist), { id: newArtist.id }));\n    }\n    //update\n    async updateArtist(id, newProp) {\n        await setDoc(doc(this.firestore, 'artist', id), newProp, {\n            merge: true,\n        });\n    }\n    //remove\n    removeArtist(id) {\n        deleteDoc(doc(this.firestore, 'artist', id));\n    }\n}\nArtistService.ɵfac = function ArtistService_Factory(t) { return new (t || ArtistService)(i0.ɵɵinject(i1.Firestore)); };\nArtistService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ArtistService, factory: ArtistService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}