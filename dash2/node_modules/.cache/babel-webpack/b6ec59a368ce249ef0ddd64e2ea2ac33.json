{"ast":null,"code":"import _asyncToGenerator from \"/home/dev/Development/src/untitled folder/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators, VERSION } from '@angular/forms';\nimport { HttpResponse, HttpEventType } from '@angular/common/http';\nlet AdminServiceAddComponent = class AdminServiceAddComponent {\n  // _subimg1;\n  // _subimg2;\n  // _subimg3;\n  constructor(http, uploadService, categoriesService, artistService, productService, route, toastService) {\n    var _this = this;\n\n    this.http = http;\n    this.uploadService = uploadService;\n    this.categoriesService = categoriesService;\n    this.artistService = artistService;\n    this.productService = productService;\n    this.route = route;\n    this.toastService = toastService;\n    this.uploadSuccess = false;\n    this.addSuccess = false;\n    this.service = new FormGroup({\n      title: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      description: new FormControl('', [Validators.required, Validators.minLength(30)]),\n      size: new FormControl('', [Validators.minLength(3)]),\n      price: new FormControl('', [Validators.required, Validators.min(100)]),\n      artist: new FormControl(''),\n      category: new FormControl(''),\n      mainImg: new FormControl('', Validators.required) // subImg1: new FormControl('', Validators.required),\n      // subImg2: new FormControl('', Validators.required),\n      // subImg3: new FormControl('', Validators.required),\n\n    });\n    this.version = VERSION;\n    this.categeories = this.categoriesService.getcategoriess().subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (data) {\n        _this.categeories = yield data;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    this.artists = this.artistService.getArtists().subscribe( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (data) {\n        _this.artists = yield data;\n      });\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }\n\n  get title() {\n    return this.service.get('title');\n  }\n\n  get description() {\n    return this.service.get('description');\n  }\n\n  get size() {\n    return this.service.get('size');\n  }\n\n  get price() {\n    return this.service.get('price');\n  }\n\n  get artist() {\n    return this.service.get('artist');\n  }\n\n  get category() {\n    return this.service.get('category');\n  }\n\n  get mainImg() {\n    return this.service.get('mainImg');\n  } // get subImg1() {\n  //   return this.service.get('subImg1');\n  // }\n  // get subImg2() {\n  //   return this.service.get('subImg2');\n  // }\n  // get subImg3() {\n  //   return this.service.get('subImg3');\n  // }\n\n\n  addService() {\n    console.log(this.service.value);\n    console.log(this.selectedFiles);\n    this.uploadService.upload('images/services', this.selectedFiles[0].name, this.selectedFiles[0]).then(data => {\n      if (data && this.selectedFiles && this.uploadSuccess && this.service.valid) {\n        this.productService.addProduct({\n          title: this.title.value,\n          description: this.description.value,\n          size: this.size.value ? this.size.value : '',\n          price: this.price.value,\n          images: {\n            mainImage: data,\n            subImages: [data, data, data]\n          },\n          artistID: this.artist.value,\n          categoryID: this.category.value,\n          TimeStamp: {\n            createdAt: new Date().toDateString(),\n            updatedAt: new Date().toDateString(),\n            removedAt: null\n          }\n        }).then(() => {\n          this.addSuccess = true;\n          this.route.navigate(['/admin/services']); // setTimeout(() => {\n          //   this.route.navigate(['/admin/services']);\n          // }, 500);\n        });\n      }\n    });\n  }\n\n  upload(files) {\n    this.uploadAndProgress(files);\n    this.selectedFiles = files;\n  }\n\n  uploadAndProgress(files) {\n    var formData = new FormData();\n    Array.from(files).forEach(f => formData.append('file', f));\n    this.http.post('https://file.io', formData, {\n      reportProgress: true,\n      observe: 'events'\n    }).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        this.percentDone = Math.round(100 * event.loaded / event.total);\n        console.log(files);\n      } else if (event instanceof HttpResponse) {\n        this.uploadSuccess = true;\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  showSuccess() {\n    this.toastService.show('Add success ', {\n      classname: 'bg-success text-light'\n    });\n  }\n\n};\nAdminServiceAddComponent = __decorate([Component({\n  selector: 'app-admin-service-add',\n  templateUrl: './admin-service-add.component.html',\n  styleUrls: ['./admin-service-add.component.css']\n})], AdminServiceAddComponent);\nexport { AdminServiceAddComponent };","map":{"version":3,"sources":["/home/dev/Development/src/untitled folder/dashboard/src/app/components/admin-service/admin-service-add/admin-service-add.component.ts"],"names":["__decorate","Component","FormControl","FormGroup","Validators","VERSION","HttpResponse","HttpEventType","AdminServiceAddComponent","constructor","http","uploadService","categoriesService","artistService","productService","route","toastService","uploadSuccess","addSuccess","service","title","required","minLength","description","size","price","min","artist","category","mainImg","version","categeories","getcategoriess","subscribe","data","artists","getArtists","get","addService","console","log","value","selectedFiles","upload","name","then","valid","addProduct","images","mainImage","subImages","artistID","categoryID","TimeStamp","createdAt","Date","toDateString","updatedAt","removedAt","navigate","files","uploadAndProgress","formData","FormData","Array","from","forEach","f","append","post","reportProgress","observe","event","type","UploadProgress","percentDone","Math","round","loaded","total","ngOnInit","showSuccess","show","classname","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators, VERSION } from '@angular/forms';\nimport { HttpResponse, HttpEventType, } from '@angular/common/http';\nlet AdminServiceAddComponent = class AdminServiceAddComponent {\n    // _subimg1;\n    // _subimg2;\n    // _subimg3;\n    constructor(http, uploadService, categoriesService, artistService, productService, route, toastService) {\n        this.http = http;\n        this.uploadService = uploadService;\n        this.categoriesService = categoriesService;\n        this.artistService = artistService;\n        this.productService = productService;\n        this.route = route;\n        this.toastService = toastService;\n        this.uploadSuccess = false;\n        this.addSuccess = false;\n        this.service = new FormGroup({\n            title: new FormControl('', [Validators.required, Validators.minLength(3)]),\n            description: new FormControl('', [\n                Validators.required,\n                Validators.minLength(30),\n            ]),\n            size: new FormControl('', [Validators.minLength(3)]),\n            price: new FormControl('', [Validators.required, Validators.min(100)]),\n            artist: new FormControl(''),\n            category: new FormControl(''),\n            mainImg: new FormControl('', Validators.required),\n            // subImg1: new FormControl('', Validators.required),\n            // subImg2: new FormControl('', Validators.required),\n            // subImg3: new FormControl('', Validators.required),\n        });\n        this.version = VERSION;\n        this.categeories = this.categoriesService\n            .getcategoriess()\n            .subscribe(async (data) => {\n            this.categeories = await data;\n        });\n        this.artists = this.artistService.getArtists().subscribe(async (data) => {\n            this.artists = await data;\n        });\n    }\n    get title() {\n        return this.service.get('title');\n    }\n    get description() {\n        return this.service.get('description');\n    }\n    get size() {\n        return this.service.get('size');\n    }\n    get price() {\n        return this.service.get('price');\n    }\n    get artist() {\n        return this.service.get('artist');\n    }\n    get category() {\n        return this.service.get('category');\n    }\n    get mainImg() {\n        return this.service.get('mainImg');\n    }\n    // get subImg1() {\n    //   return this.service.get('subImg1');\n    // }\n    // get subImg2() {\n    //   return this.service.get('subImg2');\n    // }\n    // get subImg3() {\n    //   return this.service.get('subImg3');\n    // }\n    addService() {\n        console.log(this.service.value);\n        console.log(this.selectedFiles);\n        this.uploadService\n            .upload('images/services', this.selectedFiles[0].name, this.selectedFiles[0])\n            .then((data) => {\n            if (data &&\n                this.selectedFiles &&\n                this.uploadSuccess &&\n                this.service.valid) {\n                this.productService\n                    .addProduct({\n                    title: this.title.value,\n                    description: this.description.value,\n                    size: this.size.value ? this.size.value : '',\n                    price: this.price.value,\n                    images: {\n                        mainImage: data,\n                        subImages: [data, data, data],\n                    },\n                    artistID: this.artist.value,\n                    categoryID: this.category.value,\n                    TimeStamp: {\n                        createdAt: new Date().toDateString(),\n                        updatedAt: new Date().toDateString(),\n                        removedAt: null,\n                    },\n                })\n                    .then(() => {\n                    this.addSuccess = true;\n                    this.route.navigate(['/admin/services']);\n                    // setTimeout(() => {\n                    //   this.route.navigate(['/admin/services']);\n                    // }, 500);\n                });\n            }\n        });\n    }\n    upload(files) {\n        this.uploadAndProgress(files);\n        this.selectedFiles = files;\n    }\n    uploadAndProgress(files) {\n        var formData = new FormData();\n        Array.from(files).forEach((f) => formData.append('file', f));\n        this.http\n            .post('https://file.io', formData, {\n            reportProgress: true,\n            observe: 'events',\n        })\n            .subscribe((event) => {\n            if (event.type === HttpEventType.UploadProgress) {\n                this.percentDone = Math.round((100 * event.loaded) / event.total);\n                console.log(files);\n            }\n            else if (event instanceof HttpResponse) {\n                this.uploadSuccess = true;\n            }\n        });\n    }\n    ngOnInit() { }\n    showSuccess() {\n        this.toastService.show('Add success ', {\n            classname: 'bg-success text-light',\n        });\n    }\n};\nAdminServiceAddComponent = __decorate([\n    Component({\n        selector: 'app-admin-service-add',\n        templateUrl: './admin-service-add.component.html',\n        styleUrls: ['./admin-service-add.component.css'],\n    })\n], AdminServiceAddComponent);\nexport { AdminServiceAddComponent };\n"]},"metadata":{},"sourceType":"module"}